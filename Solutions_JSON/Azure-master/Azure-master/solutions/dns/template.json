{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Connections": {
            "type": "array",
            "metadata": {
                "description": "VNET Gateway Connection properties"
            },
            "defaultValue": [
                {
                    "name": "cn-vnetvgw-hub-to-spoke",
                    "vnetGateway1": "vnetvgw-hub",
                    "vnetGateway2": "vnetvgw-spoke"
                },
                {
                    "name": "cn-vnetvgw-spoke-to-hub",
                    "vnetGateway1": "vnetvgw-spoke",
                    "vnetGateway2": "vnetvgw-hub"
                }
            ]
        },
        "HomePip": {
            "type": "string",
            "metadata": {
                "description": "The Public IP address for your home netowrk to allow RDP traffic through the NSG"
            }
        },
        "Nics": {
            "type": "array",
            "metadata": {
                "description": "Network Interface Cards"
            },
            "defaultValue": [
                {
                    "name": "nic-vmdnshub",
                    "vnet": "vnet-hub",
                    "subnet": "snet-hub",
                    "ip": "10.0.0.4",
                    "pip": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-vmdnshub')]"
                    }
                },
                {
                    "name": "nic-vmclthub1",
                    "vnet": "vnet-hub",
                    "subnet": "snet-hub",
                    "ip": "10.0.0.5",
                    "pip": ""
                },
                {
                    "name": "nic-vmdnsspoke",
                    "vnet": "vnet-spoke",
                    "subnet": "snet-spoke",
                    "ip": "10.0.1.4",
                    "pip": ""              
                },
                {
                    "name": "nic-vmcltspoke1",
                    "vnet": "vnet-spoke",
                    "subnet": "snet-spoke",
                    "ip": "10.0.1.5",
                    "pip": ""                   
                },
                {
                    "name": "nic-vmcltspoke2",
                    "vnet": "vnet-spoke",
                    "subnet": "snet-spoke",
                    "ip": "10.0.1.6",
                    "pip": ""                 
                }
            ]
        },
        "Nsgs": {
            "type": "array",
            "metadata": {
                "description": "Network security groups applied to the subnets"
            },
            "defaultValue": [
                "nsg-hub",
                "nsg-spoke"
            ]
        },
        "PublicIps": {
            "type": "array",
            "metadata": {
                "description": "Names for the Public IP Address resources"
            },
            "defaultValue": [
                "pip-vnetvgw-hub",
                "pip-vnetvgw-spoke",
                "pip-vmdnshub"
            ]
        },
        "StorageSuffix": {
            "type": "string",
            "defaultValue": "jasonmasten"
        },
        "VirtualMachines": {
            "type": "array",
            "metadata": {
                "description": "Info needed to provision virtual machines"
            },
            "defaultValue": [
                {
                    "name": "vm-clt-hub-1",
                    "publisher": "MicrosoftWindowsDesktop",
                    "offer": "Windows-10",
                    "sku": "20h1-pro",
                    "licenseType": "Windows_Client"
                },
                {
                    "name": "vm-clt-spoke-1",
                    "publisher": "MicrosoftWindowsDesktop",
                    "offer": "Windows-10",
                    "sku": "20h1-pro",
                    "licenseType": "Windows_Client"
                },
                {
                    "name": "vm-clt-spoke-2",
                    "publisher": "MicrosoftWindowsDesktop",
                    "offer": "Windows-10",
                    "sku": "20h1-pro",
                    "licenseType": "Windows_Client"
                },
                {
                    "name": "vm-dns-hub",
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2016-Datacenter",
                    "licenseType": null
                },
                {
                    "name": "vm-dns-spoke",
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2016-Datacenter",
                    "licenseType": null
                }
            ]
        },
        "VirtualNetworks": {
            "type": "array",
            "metadata": {
                "description": "Virtual Networks"
            },
            "defaultValue": [
                {
                    "name": "vnet-hub",
                    "addressPrefix": "10.0.0.0/24",
                    "subnets": [
                        {
                            "name": "GatewaySubnet",
                            "properties": {
                                "addressPrefix": "10.0.0.16/28",
                                "serviceEndpoints": [],
                                "delegations": [],
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        },
                        {
                            "name": "snet-hub",
                            "properties": {
                                "addressPrefix": "10.0.0.0/28",
                                "networkSecurityGroup": {
                                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-hub')]"
                                },
                                "serviceEndpoints": [],
                                "delegations": [],
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        }
                    ]
                },
                {
                    "name": "vnet-spoke",
                    "addressPrefix": "10.0.1.0/24",
                    "subnets": [
                        {
                            "name": "GatewaySubnet",
                            "properties": {
                                "addressPrefix": "10.0.1.16/28",
                                "serviceEndpoints": [],
                                "delegations": [],
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        },
                        {
                            "name": "snet-spoke",
                            "properties": {
                                "addressPrefix": "10.0.1.0/28",
                                "networkSecurityGroup": {
                                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-spoke')]"
                                },
                                "serviceEndpoints": [],
                                "delegations": [],
                                "privateEndpointNetworkPolicies": "Disabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        }
                    ]
                }
            ]
        },
        "VmPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The local admin password for virtual machines"
            }
        },
        "VmUsername": {
            "type": "securestring",
            "metadata": {
                "description": "The local admin username for virtual machines"
            }
        },
        "VnetGateways": {
            "type": "array",
            "metadata": {
                "description": "VNET Gateway properties"
            },
            "defaultValue": [
                {
                    "name": "vnetvgw-hub",
                    "bgpPeeringAddress": "10.0.0.30"
                },
                {
                    "name": "vnetvgw-spoke",
                    "bgpPeeringAddress": "10.0.1.30"
                }
            ]
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('Nsgs')[copyIndex()]]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nsgLoop",
                "count": "[length(parameters('Nsgs'))]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow_RDP",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "[parameters('HomePip')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('VirtualNetworks')[copyIndex()].name]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "nsgLoop"
            ],
            "copy": {
                "name": "vnetLoop",
                "count": "[length(parameters('VirtualNetworks'))]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('VirtualNetworks')[copyIndex()].addressPrefix]"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": [
                        "10.0.0.4"
                    ]
                },
                "subnets": "[parameters('VirtualNetworks')[copyIndex()].subnets]",
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "privatelink.file.core.windows.net",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 1,
                "numberOfVirtualNetworkLinksWithRegistration": 0
            },
            "resources": [
                {
                    "type": "SOA",
                    "apiVersion": "2018-09-01",
                    "name": "@",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.file.core.windows.net')]"
                    ],
                    "properties": {
                        "ttl": 3600,
                        "soaRecord": {
                            "email": "azureprivatedns-host.microsoft.com",
                            "expireTime": 2419200,
                            "host": "azureprivatedns.net",
                            "refreshTime": 3600,
                            "retryTime": 300,
                            "serialNumber": 1,
                            "minimumTtl": 10
                        }
                    }
                },
                {
                    "type": "A",
                    "apiVersion": "2018-09-01",
                    "name": "[concat('storwvd', parameters('StorageSuffix'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.file.core.windows.net')]"
                    ],
                    "properties": {
                        "ttl": 3600,
                        "aRecords": [
                            {
                                "ipv4Address": "10.0.1.7"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-05-01",
            "name": "[parameters('PublicIps')[copyIndex()]]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Basic"
            },
            "copy": {
                "name": "pipLoop",
                "count": "[length(parameters('PublicIps'))]"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[concat('storwvd', parameters('StorageSuffix'))]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Premium_LRS",
                "tier": "Premium"
            },
            "kind": "FileStorage",
            "properties": {
                "largeFileSharesState": "Enabled",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[parameters('Nics')[copyIndex()].name]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "vnetLoop"
            ],
            "copy": {
                "name": "nicLoop",
                "count": "[length(parameters('Nics'))]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[parameters('Nics')[copyIndex()].ip]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('Nics')[copyIndex()].vnet, parameters('Nics')[copyIndex()].subnet)]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "publicIPAddress": "[if(empty(parameters('Nics')[copyIndex()].pip), json('null'), parameters('Nics')[copyIndex()].pip)]"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('VirtualMachines')[copyIndex()].name]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "nicLoop",
                "pipLoop",
                "vnetLoop"
            ],
            "copy": {
                "name": "clientVmLoop",
                "count": "[length(parameters('VirtualMachines'))]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('VirtualMachines')[copyIndex()].publisher]",
                        "offer": "[parameters('VirtualMachines')[copyIndex()].offer]",
                        "sku": "[parameters('VirtualMachines')[copyIndex()].sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat('disk-', parameters('VirtualMachines')[copyIndex()].name, '-os')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('VirtualMachines')[copyIndex()].name]",
                    "adminUsername": "[parameters('VmUsername')]",
                    "adminPassword": "[parameters('VmPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-', parameters('VirtualMachines')[copyIndex()].name))]"
                        }
                    ]
                },
                "licenseType": "[parameters('VirtualMachines')[copyIndex()].licenseType]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat('storwvd', parameters('StorageSuffix'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', concat('storwvd', parameters('StorageSuffix')))]"
            ],
            "sku": {
                "name": "Premium_LRS",
                "tier": "Premium"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2020-05-01",
            "name": "[parameters('VnetGateways')[copyIndex()].name]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "pipLoop",
                "vnetLoop"
            ],
            "copy": {
                "name": "vnetGatewayLoop",
                "count": "[length(parameters('VnetGateways'))]"
            },
            "properties": {
                "enablePrivateIpAddress": false,
                "ipConfigurations": [
                    {
                        "name": "default",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('PublicIps')[copyIndex()])]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('VirtualNetworks')[copyIndex()].name, 'GatewaySubnet')]"
                            }
                        }
                    }
                ],
                "sku": {
                    "name": "VpnGw1",
                    "tier": "VpnGw1"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false,
                "activeActive": false,
                "vpnClientConfiguration": {
                    "vpnClientProtocols": [
                        "OpenVPN",
                        "IkeV2"
                    ],
                    "vpnClientRootCertificates": [],
                    "vpnClientRevokedCertificates": [],
                    "radiusServers": [],
                    "vpnClientIpsecPolicies": []
                },
                "bgpSettings": {
                    "asn": 65515,
                    "bgpPeeringAddress": "[parameters('VnetGateways')[copyIndex()].bgpPeeringAddress]",
                    "peerWeight": 0,
                    "bgpPeeringAddresses": [
                        {
                            "ipconfigurationId": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('VnetGateways')[copyIndex()].name), '/ipConfigurations/default')]",
                            "customBgpIpAddresses": []
                        }
                    ]
                },
                "vpnGatewayGeneration": "Generation1"
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "apiVersion": "2020-05-01",
            "name": "[parameters('Connections')[copyIndex()].name]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "vnetGatewayLoop"
            ],
            "copy": {
                "name": "connectionLoop",
                "count": "[length(parameters('Connections'))]"
            },
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('Connections')[copyIndex()].vnetGateway1)]"
                },
                "virtualNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('Connections')[copyIndex()].vnetGateway2)]"
                },
                "connectionType": "Vnet2Vnet",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "enableBgp": false,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [],
                "trafficSelectorPolicies": [],
                "expressRouteGatewayBypass": false,
                "dpdTimeoutSeconds": 0
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "privatelink.file.core.windows.net/riwd46hyturhq",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.file.core.windows.net')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'vnet-spoke')]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', 'vnet-spoke')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[concat('pe-storwvd', parameters('StorageSuffix'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', concat('storwvd', parameters('StorageSuffix')))]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'vnet-spoke')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat('pe-storwvd', parameters('StorageSuffix'), '_ef2a0611-bb79-4b78-8e1b-ea3039648026')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', concat('storwvd', parameters('StorageSuffix')))]",
                            "groupIds": [
                                "file"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'vnet-spoke', 'snet-spoke')]"
                },
                "customDnsConfigs": [
                    {
                        "fqdn": "[concat('storwvd', parameters('StorageSuffix'),'.file.core.windows.net')]",
                        "ipAddresses": [
                            "10.0.1.7"
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat('storwvd', parameters('StorageSuffix'), '/default/wvd')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', concat('storwvd', parameters('StorageSuffix')), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', concat('storwvd', parameters('StorageSuffix')))]"
            ],
            "properties": {
                "shareQuota": 1024
            }
        }/*,
        {
            "type": "Microsoft.Storage/storageAccounts/privateEndpointConnections",
            "apiVersion": "2019-06-01",
            "name": "[concat('storwvd', parameters('StorageSuffix'), '/storwvd', parameters('StorageSuffix'), '.3c1be6e8-79fd-4486-9503-3b7909e7b164')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', concat('storwvd', parameters('StorageSuffix')))]",
                "[resourceId('Microsoft.Network/privateEndpoints', concat('pe-storwvd', parameters('StorageSuffix')))]"
            ],
            "properties": {
                "privateEndpoint": {
                    "id": "[resourceId('Microsoft.Network/privateEndpoints', concat('pe-storwvd', parameters('StorageSuffix')))]"
                },
                "privateLinkServiceConnectionState": {
                    "status": "Approved",
                    "description": "Auto-Approved",
                    "actionRequired": "None"
                }
            }
        }*/
    ]
}