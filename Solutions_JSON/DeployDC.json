{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUser": {
            "type": "string",
            "defaultValue": "admin",
            "metadata": {
                "description": "Admin Username for Lab VM"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for admin user"
            }
        },
        "VMSkuSize": {
            "type": "string",
            "defaultValue": "Standard_D4s_v3",
            "metadata": {
                "description": "VM Size for your Domain Controller. "
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location to deploy current resource"
            }
        },
        "ServerOSVersion": {
            "type": "string",
            "defaultValue": "2019-Datacenter-gensecond",
            "allowedValues": [
                "2019-Datacenter-gensecond",
                "2016-Datacenter-gensecond",
                "2012-Datacenter-gensecond"
            ],
            "metadata": {
                "description": "Choose which OS you'd like to use. (All are Gen2 VMs)"
            }
        },
        "DesiredName": {
            "type": "string",
            "defaultValue": "AVDLab",
            "metadata": {
                "description": "Short name that will be embedded in the Azure Resource Names."
            }
        },
        "VNetAddressSpace": {
            "type": "string",
            "metadata": {
                "description": "Virtual Network Address Space in CIDR Format"
            }
        },
        "AD_DomainName_FQDN": {
            "type": "string",
            "metadata": {
                "description": "Virtual Network Address Space in CIDR Format"
            }
        },
        "TimeStamp": {
            "type": "string",
            "defaultValue": "[utcNow()]",
            "metadata": {
                "description": "Used to ensure deployment is unique."
            }
        }
    },
    "variables": {
        "nsgname": "[toLower(concat('nsg-',parameters('location'),'-',parameters('DesiredName')))]",
        "vmprename": "[concat('vm',parameters('DesiredName'))]",
        "SubnetOctet1": "[split(parameters('VNetAddressSpace'),'.')[0]]",
        "SubnetOctet2": "[split(parameters('VNetAddressSpace'),'.')[1]]",
        "NetBiOSName": "[split(parameters('AD_DomainName_FQDN'),'.')[0]]",
        "BastionSubNet": "[concat(variables('SubnetOctet1'),'.',variables('SubnetOctet2'),'.200.0/27')]",
        "VNetName": "[concat('vnet-',parameters('location'),'-',parameters('DesiredName'))]",
        "SubnetName": "[concat('sub-',parameters('location'),'-',parameters('DesiredName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[concat('vnet-',parameters('location'),'-',parameters('DesiredName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname'))]"
            ],
            "tags": {
                "displayName": "[concat(parameters('DesiredName'),' VNet')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('VNetAddressSpace')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[concat('sub-',parameters('location'),'-',parameters('DesiredName'))]",
                        "properties": {
                            "addressPrefix": "[concat(split(parameters('VNetAddressSpace'),'/')[0],'/24')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-04-01",
            "name": "[variables('nsgname')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowRDP",
                        "properties": {
                            "description": "Placeholder for RDP - initially set to deny",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
/*         {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[concat('pip-bastion-',parameters('location'),'-',parameters('DesiredName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',variables('VNetName'))]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "tags": {}
        }, */
         {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(variables('VNetName'),'/', variables('SubnetName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',variables('VNetName'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('VNetAddressSpace')]"
            }
        },
/*      {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(variables('VNetName'),'/AzureBastionSubnet')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',variables('VNetName'))]"
            ],
            "properties": {
                "addressPrefix": "10.20.200.0/27"    // Check the Prefix required for Bastion
            }
        },
        {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/bastionHosts",
            "name": "[concat(parameters('location'),'-',parameters('DesiredName'),'-BastionHost')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/PublicIPAddresses',concat('pip-bastion-',parameters('location'),'-',parameters('DesiredName')))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('VNetName'),'AzureBastionSubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat('pip-bastion-',parameters('location'),'-',parameters('DesiredName')))]"
                            }
                        }
                    }
                ]
            },
            "tags": {}
        }, */
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[concat('nic-',parameters('DesiredName'),'-',variables('vmprename'),'DC01')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('VNetName'), variables('SubnetName'))]"
            ],
            "tags": {
                "displayName": "[concat(parameters('DesiredName'), 'Virtual Network Interface')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VNetName'), variables('SubnetName'))]"
                            }
                        }
                    }
                ]
            }

        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('vmprename'),'DC01')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-',parameters('DesiredName'),'-',variables('vmprename'),'DC01'))]"
            ],
            "tags": {
                "displayName": "[concat(variables('vmprename'),'DC01')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('VMSkuSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmprename'),'DC01')]",
                    "adminUsername": "[parameters('adminUser')]",
                    "adminPassword": "PrivateSettingsRef:adminPassword",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "timeZone": "Eastern Standard Time"
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('ServerOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('vmprename'),'DC01-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[concat(variables('vmprename'),'DC01-SysvolDisk')]",
                            "caching": "None",
                            "createOption": "Empty",
                            "diskSizeGB": 32,
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-',parameters('DesiredName'),'-',variables('vmprename'),'DC01'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vmprename'),'DC01/DSC')]",
            "location": "[parameters('Location')]",
            "dependsOn": [
                "[resourceID('Microsoft.compute/virtualMachines',concat(variables('vmprename'),'DC01'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.77",
                "autoUpgradeMinorVersion": true,
                "forceUpdateTag": "[parameters('Timestamp')]",
                "protectedSettings": {
                    "Items": {
                        "adminPassword": "[parameters('adminPassword')]"
                    }
                },
                "settings": {
                    "wmfVersion": "latest",
                    "modulesUrl": "https://github.com/JCoreMS/Scripts/blob/master/Solutions_JSON/ActiveDirectoryForest.zip?raw=true",
                    "configurationFunction": "ActiveDirectoryForest.ps1\\ActiveDirectoryForest",
                    "properties": {
                        "Domain": "[parameters('AD_DomainName_FQDN')]",
                        "DomainCreds": {
                            "UserName": "[parameters('adminUser')]",
                            "Password": "PrivateSettingsRef:adminPassword"
                        }
                    }
                }
            }
        }
    ]
}
//         "message": "VM has reported a failure when processing extension 'DSC'. Error message: \"DSC Configuration 'ActiveDirectoryForest' completed with error(s).
// Following are the first few: WinRM cannot process the request. The following error with errorcode 0x80090350 occurred while using Negotiate authentication: An unknown
// security error occurred.  \r\n Possible causes are:\r\n  -The user name or password specified are invalid.\r\n  -Kerberos is used when no authentication method and no user name are specified.\r\n 
// -Kerberos accepts domain user names, but not local user names.\r\n  -The Service Principal Name (SPN) for the remote computer name and port does not exist.\r\n  -The client and remote computers
// are in different domains and there is no trust between the two domains.\r\n After checking for the above issues, try the following:\r\n  -Check the Event Viewer for events related to authentication.\r\n
//  -Change the authentication method; add the destination computer to the WinRM TrustedHosts configuration setting or use HTTPS transport.\r\n Note that computers in the TrustedHosts list might not be authenticated.\r\n 
//  -For more information about WinRM configuration, run the following command: winrm help config.\"\r\n\r\nMore information on troubleshooting is available at https://aka.ms/VMExtensionDSCWindowsTroubleshoot "